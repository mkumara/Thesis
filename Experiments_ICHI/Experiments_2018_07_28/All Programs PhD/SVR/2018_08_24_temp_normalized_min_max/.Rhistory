list.('.')
list.files('.')
list.files()
clear
clc
cls
clear()
f2c
f2c
fahrenhiet_to_kelvin(10)
2+2
source('f2c.R')
fahrenheit_to_kelvin(120)
m = read.csv('all_Bueng Kan.csv')
m
m(1,2)
size(m)
dim(m)
m = read.csv('all_Bueng Kan.csv', header = false)
m = read.csv('all_Bueng Kan.csv', header = FALSE)
m
dim(m)
m[1:10]
m[1:2]
m[1;1:2]
ls
ls()
typeof(m)
m[c(1:10)]
m[c(1:2)]
m[c(1:3)]
m[1:3]
m[1:1]
m[1:1,10:12]
m[r(10:12)]
help c
c help
typeof(m)
m
dim(m)
m2 <- as.matrix(m)
m2
typeof(m2)
dim(m2)
m2(1:2)
m2[1:2]
m2[1:2,1:10]
m2[1:2,1:2]
m2[1:2,]
max(m2)
max(max(m2))
max(m2[1,])
max(m2[1,2])
max(m2[1,3])
m2
max(m2[1:2,3])
m3 = m2/100
m
m3
source('f2c.R')
normalizeData('all_Bueng Kan.csv')
matrixData
matrixData = normalizeData('all_Bueng Kan.csv')
matrixData
a = dim(m)
typeof(a)
a
a[1]
a[2]
matrixData = normalizeData('all_Bueng Kan.csv')
matrixData
source('f2c.R')
matrixData = normalizeData('all_Bueng Kan.csv')
matrixData()
matrixData
source('f2c.R')
matrixData = normalizeData('all_Bueng Kan.csv')
matrixData = normalizeData('all_Bueng Kan.csv')
source('f2c.R')
matrixData = normalizeData('all_Bueng Kan.csv')
s = matrix(,2,3)
s
size = dim(m)
s= matrix(size)
s
s= matrix(,size)
s
size
s= matrix(,size[1],size[2])
s
s= matrix(1,size[1],size[2])
s
s[1:2,1:12] = m[1:2,1:2]
s[1:2,1:2] = m[1:2,1:2]
s
s[1:2,1:2] = m[1:2,1:2]
m
s
cl
s\
m[1:2,1:2]
s= matrix(,size[1],size[2])
s
s= matrix(0,size[1],size[2])
s
s[1,2] = 10
s[1,2]
s
s[1:2,1] = [1,2]
s[1:2]
s[1, 1:2] = [20,30]
s[1, 1:2]
s[1, 1:2] = 20
s[1, 1:2]
s[1, 1:2] = 20,20
s[1, 1:2] = list(20,20)
s[1, 1:2]
s
cls
s= matrix(0,size[1],size[2])
s <- m
s
s= matrix(0,size[1],size[2])
s
s[1:10,] <- m[1:10,]
s
s[1:10,] <- m[1:10,]
a <- matrix(0, 2,2)
a
b <- matrix(1, 2,2)
b
c <- rbind(a,b)
c
c <-rbind(c,a)
c
source('f2c.R')
normalizeData('all_Bueng Kan.csv')
source('f2c.R')
normalizeData('all_Bueng Kan.csv')
source('f2c.R')
normalizeData('all_Bueng Kan.csv')
source('f2c.R')
normalizeData('all_Bueng Kan.csv')
normalizeData('all_Bueng Kan.csv')
source('f2c.R')
normalizeData('all_Bueng Kan.csv')
source('f2c.R')
normalizeData('all_Bueng Kan.csv')
m
m[1:1+11]
m[1:1+11,]
m[1:12,]
m[1:(1+11),]
source('f2c.R')
m[1:(1+11),]
normalizeData('all_Bueng Kan.csv')
source('f2c.R')
normalizeData('all_Bueng Kan.csv')
m
source('f2c.R')
normalizeData('all_Bueng Kan.csv')
source('f2c.R')
normalizeData('all_Bueng Kan.csv')
source('f2c.R')
normalizeData('all_Bueng Kan.csv')
source('f2c.R')
normalizeData('all_Bueng Kan.csv')
source('f2c.R')
normalizeData('all_Bueng Kan.csv')
scatter.smooth(m[,2],m[,1],main = 'main')
d = normalizeData('all_Bueng Kan.csv')
d
scatter.smooth(d[,2],d[,1],main = 'main')
boxplot(d[,1])
boxplot.stats(d[,1])
boxplot.stats(d[,1])$out
boxplot.stats(d[,2])$out
cor(d[,1], d[,2])
cor(m[,1], m[,2])
library(e1071)
par(mfrow=c(1, 2))  # divide graph area in 2 columns
plot(density(cars$speed), main="Density Plot: Speed", ylab="Frequency", sub=paste("Skewness:", round(e1071::skewness(cars$speed), 2)))  # density plot for 'speed'
polygon(density(cars$speed), col="red")
plot(density(cars$dist), main="Density Plot: Distance", ylab="Frequency", sub=paste("Skewness:", round(e1071::skewness(cars$dist), 2)))  # density plot for 'dist'
polygon(density(cars$dist), col="red")
library(DAAG)
cvResults <- suppressWarnings(CVlm(df=cars, form.lm=dist ~ speed, m=5, dots=FALSE, seed=29, legend.pos="topleft",  printit=FALSE, main="Small symbols are predicted values while bigger ones are actuals."));  # performs the CV
attr(cvResults, 'ms')  # => 251.2783 mean squared error
install.packages('DAAG')
library(DAAG)
cvResults <- suppressWarnings(CVlm(df=cars, form.lm=dist ~ speed, m=5, dots=FALSE, seed=29, legend.pos="topleft",  printit=FALSE, main="Small symbols are predicted values while bigger ones are actuals."));  # performs the CV
attr(cvResults, 'ms')  # => 251.2783 mean squared error
library(DAAG)
cvResults <- suppressWarnings(CVlm(df=cars, form.lm=dist ~ speed, m=5, dots=FALSE, seed=29, legend.pos="topleft",  printit=FALSE, main="Small symbols are predicted values while bigger ones are actuals."));  # performs the CV
attr(cvResults, 'ms')  # => 251.2783 mean squared error
library(DAAG)
cvResults <- suppressWarnings(CVlm(df=cars, form.lm=dist ~ speed, m=5, dots=FALSE, seed=29, legend.pos="topleft",  printit=FALSE, main="Small symbols are predicted values while bigger ones are actuals."));  # performs the CV
attr(cvResults, 'ms')  # => 251.2783 mean squared error
cars
scatter.smooth(cars$speed, cars$dist)
normalizeData('all_Bueng Kan.csv')
normalizeData('all_Bueng Kan.csv')
source('f2c.R')
normalizeData('all_Bueng Kan.csv')
s = normalizeData('all_Bueng Kan.csv')
dateScript.R
source('dateScript.R')
source('dateScript.R')
date
date
date()
date()
return(normalizedMatrix);
ls()
dir()
s = dir()
s
s[1]
dir('*.csv')
files <- list.files(pattern = "\\.csvf$")
files
files <- list.files(pattern = ".csv$")
files
source('')
source('dateScript.R')
normalizeAll();
normalizeAll();
s = normalizeData('all_Yala.csv')
s = normalizeData('all_Bangkok Metropolis.csv')
normalizeAll();
s = read.csv('normalized_all_Bangkok Metropolis.csv',header = FALSE)
s
cor(s[,1], s[,2])
cor(s[,2], s[,1])
s2 = read.csv('all_Bangkok Metropolis.csv',header = FALSE)
cor(s2[,2], s2[,1])
scatter.smooth(s[,1], s[,2])
scatter.smooth(s[,1], s[,2])
X <- matrix(stats::rnorm(2000), ncol = 2)
chull(X)
## Not run:
# Example usage from graphics package
plot(X, cex = 0.5)
hpts <- chull(X)
hpts <- c(hpts, hpts[1])
lines(X[hpts, ])
## Not run:
m
m
m2
d
c
d
b
clear
data = read.csv('normalized_all_Bueng Kan.csv', header = FALSE)
data
dim(data)
size = dim(data)
size
size[1]
size[0]
size[2]
size[3]
data
plot(data[,0], data[,1], cex = 0.5)
hpts <- chull(data[,0], data[,1])
hpts <- c(hpts, hpts[1])
lines(data[hpts, 1],data[hpts, 2] )
X <- matrix(stats::rnorm(2000), ncol = 2)
X
chull(X)
chull(data)
plot(data, cex = 0.5)
plot(data, cex = 0.5)
plot(data[,1:2], cex = 0.5)
hpts <- chull(data[,1:2])
hpts <- c(hpts, hpts[1])
lines(data[hpts, 1:2 ])
hpts
hpts[1]
c(htps)
c(hpts)
data_removed <- data[!data %in% hpts]
data_removed
x < 1:30
x <- 1:30
x
x_r <- [!x %in% 1:5]
x_r <- x[!x %in% 1:5]
x_r
data_removed <- data[!data %in% hpts]
data_removed
x <- matrix(1:5,1:5)
x
x <- matrix(1:5,1:5, 5, 5)
x
diag(5)
1 - diag(5)
m <- 1 - diag(5)
m
m <- (m==1)
m
m <- 1 - diag(5)
m
m[m==1]
m
m[m==1] <- rep(c(1,3,5,7))
m
m <- 1 - diag(5)
m[m==1] <- rep(c(1,3,5,7), each 4)
m[m==1] <- rep(c(1,3,5,7), each = 4)
m[m==1] <- rep(c(1,3,5,7), each = 5)
m[m==1] <- rep(c(1,3,5,7), each=5)
m
m <- 1-diag(5)
m
m[m==1] <- rep(c(1,3,5,7), each=5)
m
data_r = data[-hpts]
data_r
data_r = data[-hpts,]
data_r
data[, hpts]
data[hpts,]
data_r = data[-(hpts),]
data_r
data[-htps,]
data[-hpts,]
hpts
-hpts
-(hpts)
dim(data_r)
cor(data[,1],data[,2])
cor(data_r[,1],data_r[,2])
plot(data[,1:2], cex = 0.5)
lines(data[hpts, 1:2 ])
r_hpts <- chull(data_r[,1:2])
r_hpts
r_hpts <- c(r_hpts, r_hpts[1])
r_hpts
lines(data_r[r_hpts, 1:2 ])
bank = read.csv('all_Bangkok Metropolis.csv', header = FALSE)
bank
bank = read.csv('normalized-all_Bangkok Metropolis.csv', header = FALSE)
bank = read.csv('normalized_all_Bangkok Metropolis.csv', header = FALSE)
nak
bank
plot(data[,1:2])
plot(bank[,1:2])
plot(bank[,1:2])
cor(bank[,1],bank[,2])
bankp<-chull(bank[,1:2])
bankp
bankp <- c(bankp, bankp[1])
bankp
bank_r <- bank[-bankp,]
dim?(bank_r)
dim(bank_r)
cor(bank_r[,1:2])
cor(bank_r[,1],bank_r[,2])
pwd
getwd
getwd()
setwd("~/Niro_thesis/Experiments_ICHI/Experiments_2018_07_28/2018_07_29_normalized_rain_and_cases")
source('experiment_functions.R')
getAllDistricsInOne()
source('experiment_functions.R')
getAllDistricsInOne()
getAllDistricsInOne()
source('experiment_functions.R')
getAllDistricsInOne()
source('experiment_functions.R')
getAllDistricsInOne()
source('experiment_functions.R')
getAllDistricsInOne()
source('experiment_functions.R')
getAllDistricsInOne()
getAllDistricsInOne()
source('experiment_functions.R')
getAllDistricsInOne()
source('experiment_functions.R')
getAllDistricsInOne()
source('experiment_functions.R')
getAllDistricsInOne()
source('experiment_functions.R')
getAllDistricsInOne()
source('experiment_functions.R')
getAllDistricsInOne()
source('experiment_functions.R')
getAllDistricsInOne()
setwd("~/Niro_thesis/Experiments_ICHI/Experiments_2018_07_28/2018_07_29_normalized_rain_and_cases/Global")
source('experiment_functions.R')
processAllDistricts()
getLevels()
getwd()
getLevels()
source('experiment_functions.R')
getLevels()
source('experiment_functions.R')
getLevels()
getLevels()
getwd()
cd ..
cd ..
setwd('/Users/jayantha/Niro_thesis/Experiments_ICHI/Experiments_2018_07_28/')
ls
ls()
getwd()
setwd('/Users/jayantha/Niro_thesis/Experiments_ICHI/Experiments_2018_07_28/2018_08_24_temp_normalized')
getwd()
files.list(?)
files.list()
list.files()
source('experiment_functions.R')
normalizeData2()
source('NormalizeAll.R')
normalizeAll2()
setwd("~/Niro_thesis/Experiments_ICHI/Experiments_2018_07_28/2018_08_24_temp_normalized_min_max")
source('NormalizeAll.R')
source('experiment_functions.R')
normalizeAll2()
source('experiment_functions.R')
normalizeAll2()
source('experiment_functions.R')
normalizeAll2()
normalizeAll2()
normalizeAll2()
clc
clear
processAllDistricts()
processAllDistricts()
consolidateCor()
getLevels()
getLevels()
getwd()
getwd()
getLevels()
